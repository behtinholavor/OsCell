unit ufrmMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.ToolWin, Vcl.ActnMan,
  Vcl.ActnCtrls, Vcl.ActnMenus, Vcl.WinXPanels, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.DBCGrids, Vcl.Menus, System.ImageList, Vcl.ImgList;

type
  TfrmMain = class(TForm)
    menu: TMainMenu;
    pnlMain: TPanel;
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

{$R *.dfm}

uses udtmData, ufrmForm, ufrmCadastro;

procedure CreateChild(form: TfrmForm; tag: Integer = 0);
var
  i: integer;
  booExist: Boolean;
begin
  booExist := False;
  for I := 0 to frmMain.MDIChildCount - 1 do
  begin
    if frmMain.MDIChildren[I].ClassName = form.ClassName then
    begin
      frmMain.MDIChildren[I].Show;
      booExist := True;
      Break;
    end;
  end;

  if (booExist) then
  begin
    form.WindowState := wsMaximized;
  end
  else
  begin
    case tag of
      0: form := TfrmForm.Create(frmMain);
      1: form := TfrmCadastro.Create(frmMain);
    end;

    if (form <> nil) then
      form.Show;
  end;
end;


procedure TfrmMain.Button1Click(Sender: TObject);
begin
  CreateChild(frmForm);
end;

end.
